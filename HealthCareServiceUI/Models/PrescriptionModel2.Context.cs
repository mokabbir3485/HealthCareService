//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthCareServiceUI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HealthCareDBEntities1 : DbContext
    {
        public HealthCareDBEntities1()
            : base("name=HealthCareDBEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<DocEducation> DocEducations { get; set; }
        public virtual DbSet<Doctor_P> Doctor_P { get; set; }
        public virtual DbSet<Drug> Drugs { get; set; }
        public virtual DbSet<Generic> Generics { get; set; }
        public virtual DbSet<Patient_P> Patient_P { get; set; }
        public virtual DbSet<Presciption> Presciptions { get; set; }
        public virtual DbSet<PresciptionDetail> PresciptionDetails { get; set; }
        public virtual DbSet<ProfessionalDetail> ProfessionalDetails { get; set; }
        public virtual DbSet<SiteUser> SiteUsers { get; set; }
        public virtual DbSet<SiteAdmin> SiteAdmins { get; set; }
        public virtual DbSet<SitePatient> SitePatients { get; set; }
    
        public virtual int AddBrand(string brandName)
        {
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddBrand", brandNameParameter);
        }
    
        public virtual int AddDoctor_P(string doctorFullName, byte[] profilePhoto, string gender, Nullable<System.DateTime> dOB, string mobile, string email)
        {
            var doctorFullNameParameter = doctorFullName != null ?
                new ObjectParameter("DoctorFullName", doctorFullName) :
                new ObjectParameter("DoctorFullName", typeof(string));
    
            var profilePhotoParameter = profilePhoto != null ?
                new ObjectParameter("ProfilePhoto", profilePhoto) :
                new ObjectParameter("ProfilePhoto", typeof(byte[]));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDoctor_P", doctorFullNameParameter, profilePhotoParameter, genderParameter, dOBParameter, mobileParameter, emailParameter);
        }
    
        public virtual int AddGeneric(string genericName)
        {
            var genericNameParameter = genericName != null ?
                new ObjectParameter("GenericName", genericName) :
                new ObjectParameter("GenericName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddGeneric", genericNameParameter);
        }
    
        public virtual int AddPatient_P(string patientFullName, string gender, Nullable<int> age, string height, string weight, string isMarried, string mobile, string email)
        {
            var patientFullNameParameter = patientFullName != null ?
                new ObjectParameter("PatientFullName", patientFullName) :
                new ObjectParameter("PatientFullName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var heightParameter = height != null ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(string));
    
            var weightParameter = weight != null ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(string));
    
            var isMarriedParameter = isMarried != null ?
                new ObjectParameter("IsMarried", isMarried) :
                new ObjectParameter("IsMarried", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPatient_P", patientFullNameParameter, genderParameter, ageParameter, heightParameter, weightParameter, isMarriedParameter, mobileParameter, emailParameter);
        }
    
        public virtual int DeleteDoctor_P(Nullable<int> doctor_id)
        {
            var doctor_idParameter = doctor_id.HasValue ?
                new ObjectParameter("Doctor_id", doctor_id) :
                new ObjectParameter("Doctor_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDoctor_P", doctor_idParameter);
        }
    
        public virtual ObjectResult<displayBrand_Result> displayBrand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<displayBrand_Result>("displayBrand");
        }
    
        public virtual ObjectResult<displayDocEducation_Result> displayDocEducation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<displayDocEducation_Result>("displayDocEducation");
        }
    
        public virtual ObjectResult<displayDoctor_P_Result> displayDoctor_P()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<displayDoctor_P_Result>("displayDoctor_P");
        }
    
        public virtual ObjectResult<displayDrug_Result> displayDrug()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<displayDrug_Result>("displayDrug");
        }
    
        public virtual ObjectResult<displayGeneric_Result> displayGeneric()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<displayGeneric_Result>("displayGeneric");
        }
    
        public virtual ObjectResult<displayPatient_P_Result> displayPatient_P()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<displayPatient_P_Result>("displayPatient_P");
        }
    
        public virtual ObjectResult<displayPresciption_Result> displayPresciption()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<displayPresciption_Result>("displayPresciption");
        }
    
        public virtual ObjectResult<displayPresciptionDetail_Result> displayPresciptionDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<displayPresciptionDetail_Result>("displayPresciptionDetail");
        }
    
        public virtual ObjectResult<displayProfessionalDetail_Result> displayProfessionalDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<displayProfessionalDetail_Result>("displayProfessionalDetail");
        }
    
        public virtual ObjectResult<DrugJoinTables_Result> DrugJoinTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrugJoinTables_Result>("DrugJoinTables");
        }
    
        public virtual ObjectResult<PresciptionJoinTables_Result> PresciptionJoinTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PresciptionJoinTables_Result>("PresciptionJoinTables");
        }
    
        public virtual int UpdateDoctor_P(Nullable<int> doctor_id, string doctorFullName, string gender, Nullable<System.DateTime> dOB, string mobile, string email)
        {
            var doctor_idParameter = doctor_id.HasValue ?
                new ObjectParameter("Doctor_id", doctor_id) :
                new ObjectParameter("Doctor_id", typeof(int));
    
            var doctorFullNameParameter = doctorFullName != null ?
                new ObjectParameter("DoctorFullName", doctorFullName) :
                new ObjectParameter("DoctorFullName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDoctor_P", doctor_idParameter, doctorFullNameParameter, genderParameter, dOBParameter, mobileParameter, emailParameter);
        }
    
        public virtual ObjectResult<Doctor_P> fn_DoctorJoinTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Doctor_P>("fn_DoctorJoinTables");
        }
    
        public virtual ObjectResult<Doctor_P> fn_DoctorJoinTables(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Doctor_P>("fn_DoctorJoinTables", mergeOption);
        }
    
        public virtual ObjectResult<DoctorJoinTables_Result1> DoctorJoinTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoctorJoinTables_Result1>("DoctorJoinTables");
        }
    
        public virtual ObjectResult<Doctor_P> fn_DoctorJoinTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Doctor_P>("fn_DoctorJoinTable");
        }
    
        public virtual ObjectResult<Doctor_P> fn_DoctorJoinTable(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Doctor_P>("fn_DoctorJoinTable", mergeOption);
        }
    }
}
